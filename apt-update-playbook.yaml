---
- name: Update apt packages and pihole
  hosts: servers
  become: true
  tasks:
    - name: Execute with error handling
      block:
        - name: Update apt packages
          when: inventory_hostname in groups['autoreboot']
          apt:
            upgrade: true
            update_cache: yes
          register: output1

        - name: Prevent docker from being upgraded
          when: inventory_hostname in groups['dockerhost']
          ansible.builtin.dpkg_selections:
            name: docker
            selection: hold

        - name: Prevent docker-ce from being upgraded
          when: inventory_hostname in groups['dockerhost']
          ansible.builtin.dpkg_selections:
            name: docker-ce
            selection: hold

        - name: Prevent docker-ce-cli from being upgraded
          when: inventory_hostname in groups['dockerhost']
          ansible.builtin.dpkg_selections:
            name: docker-ce-cli
            selection: hold

        - name: Update apt packages
          when: inventory_hostname in groups['dockerhost']
          apt:
            upgrade: true
            update_cache: yes
          register: output2
          
        - name: Update pihole
          when: inventory_hostname in groups['piholes']
          command: pihole -up
          register: output3
          
        - name: Check if reboot required
          stat:
            path: /var/run/reboot-required
          register: reboot_required_file
          
        - name: Reboot if required
          when: reboot_required_file.stat.exists == true and inventory_hostname in groups['autoreboot']
          reboot:
            post_reboot_delay: 60
          register: output4
          
        - name: Sending an e-mail if rebooted
          become: no
          when: reboot_required_file.stat.exists == true and inventory_hostname in groups['autoreboot']
          mail:
            host: "{{ var_gmail_smtp_server }}"
            port: "{{ var_gmail_smtp_port }}"
            username: "{{ var_gmail_sender }}"
            password: "{{ var_gmail_password }}"
            to: "{{ var_gmail_receiver }}"
            subject: Server Rebooted - Ansible
            body: Rebooted system "{{ ansible_hostname }}".
          delegate_to: 127.0.0.1
          register: output5
          
        - name: Sending an e-mail if reboot needed
          become: no
          when: reboot_required_file.stat.exists == true and inventory_hostname in groups['manualreboot']
          mail:
            host: "{{ var_gmail_smtp_server }}"
            port: "{{ var_gmail_smtp_port }}"
            username: "{{ var_gmail_sender }}"
            password: "{{ var_gmail_password }}"
            to: "{{ var_gmail_receiver }}"
            subject: Server Reboot required - Ansible
            body: Reboot required for system "{{ inventory_hostname }}".
          delegate_to: 127.0.0.1
          register: output6

        - name: Sending an e-mail if tasks findished successfully
          become: no
          mail:
            host: "{{ var_gmail_smtp_server }}"
            port: "{{ var_gmail_smtp_port }}"
            username: "{{ var_gmail_sender }}"
            password: "{{ var_gmail_password }}"
            to: "{{ var_gmail_receiver }}"
            subject: Server Update success - Ansible
            body: Server Update success for "{{ inventory_hostname }}".
          delegate_to: 127.0.0.1
          register: output7
      rescue:
        - name: Sending an e-mail if any task failed
          become: no
          mail:
            host: "{{ var_gmail_smtp_server }}"
            port: "{{ var_gmail_smtp_port }}"
            username: "{{ var_gmail_sender }}"
            password: "{{ var_gmail_password }}"
            to: "{{ var_gmail_receiver }}"
            subject: Ansible task failed
            body: Ansible task failed for "{{ inventory_hostname }}" - "{{ ansible_failed_task }}".
          delegate_to: 127.0.0.1
          register: output7
      always:
        - name: Show debug messages
          debug:
            msg: "{{ item }}"
          with_items:
            - "{{ output1 | default(omit) }}"
            - "{{ output2 | default(omit) }}"
            - "{{ output3 | default(omit) }}"
            - "{{ output4 | default(omit) }}"
            - "{{ output5 | default(omit) }}"
            - "{{ output6 | default(omit) }}"
            - "{{ output7 | default(omit) }}"
