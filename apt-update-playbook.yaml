---
- name: Update apt packages
  hosts: servers
  become: true
  tasks:
    - name: Update apt packages
      apt: 
        upgrade: true
        update_cache: yes
      register: output1
      
    - name: Update pihole
      when: inventory_hostname in groups['piholes']
      command: "pihole -up"
      register: output2
      
    - name: Check if reboot required
      stat:
        path: /var/run/reboot-required
      register: reboot_required_file

    - name: Reboot if required
      when: reboot_required_file.stat.exists == true
      reboot:

    - name: Sending an e-mail if rebooted
      become: no
      when: reboot_required_file.stat.exists == false and inventory_hostname in groups['piholes']
      mail:
        host: "{{ var_gmail_smtp_server }}"
        port: "{{ var_gmail_smtp_port }}"
        username: "{{ var_gmail_sender }}"
        password: "{{ var_gmail_password }}"
        to: "{{ var_gmail_receiver }}"
        subject: Server Rebooted - Ansible 
        body: Rebooted system "{{ ansible_hostname }}".
      delegate_to: 127.0.0.1
      register: output3
      
    - name: Sending an e-mail if reboot needed
      become: no
      when: reboot_required_file.stat.exists == false and inventory_hostname in groups['proxmox']
      mail:
        host: "{{ var_gmail_smtp_server }}"
        port: "{{ var_gmail_smtp_port }}"
        username: "{{ var_gmail_sender }}"
        password: "{{ var_gmail_password }}"
        to: "{{ var_gmail_receiver }}"
        subject: Server Reboot requited - Ansible 
        body: Reboot requied for system "{{ ansible_hostname }}".
      delegate_to: 127.0.0.1
      register: output4

    - name: Show debug messages
      debug:
        when: "{{ item.stdout }}" is defined and "{{ item.stderr }}" is defined"
        msg: "{{ item.stdout }}\nError: {{ item.stderr }}"
      with_items:
        - "{{ output1 }}"
        - "{{ output2 }}"
        - "{{ output3 }}"
        - "{{ output4 }}"
